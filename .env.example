# ===================================
# üöÄ SPARKA AI - Environment Configuration
# ===================================
# This file contains all environment variables needed for the Sparka AI project.
# Copy this file to .env.local and fill in your actual values.
#
# Required variables are marked with ‚ö†Ô∏è
# Optional variables are marked with üí°

# ===================================
# üîê AUTHENTICATION & SECURITY
# ===================================

# ‚ö†Ô∏è NextAuth secret key for JWT signing and encryption
# Generate: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=your_nextauth_secret_here

# üí° Google OAuth (optional - for user authentication)
# Get credentials: https://console.developers.google.com/
AUTH_GOOGLE_ID=your_google_oauth_client_id
AUTH_GOOGLE_SECRET=your_google_oauth_client_secret

# üí° GitHub OAuth (optional - disabled by default)
# Get credentials: https://github.com/settings/applications/new
# AUTH_GITHUB_ID=your_github_client_id
# AUTH_GITHUB_SECRET=your_github_client_secret

# ‚ö†Ô∏è Secret for authenticating cron job endpoints
# Generate a secure random string for internal API protection
CRON_SECRET=your_secure_cron_secret

# ===================================
# üóÑÔ∏è DATABASE CONFIGURATION
# ===================================

# ‚ö†Ô∏è PostgreSQL connection string
# Vercel Postgres: https://vercel.com/docs/storage/vercel-postgres/quickstart
# Local development: postgresql://username:password@localhost:5432/database_name
POSTGRES_URL=postgresql://username:password@host:port/database

# ===================================
# ü§ñ AI PROVIDERS & MODELS
# ===================================

# ‚ö†Ô∏è OpenAI API key for GPT models and image generation
# Get your key: https://platform.openai.com/api-keys
OPENAI_API_KEY=sk-your_openai_api_key_here

# üí° OpenAI Vector Store ID for file search functionality
# Create vector store: https://platform.openai.com/docs/assistants/tools/file-search
OPENAI_VECTORSTORE_ID=vs_your_vectorstore_id_here

# üí° Fireworks AI API key (for deepseek-r1 and other models)
# Get your key: https://fireworks.ai/api-keys
FIREWORKS_KEY=fw-your_fireworks_api_key_here

# üí° AI Gateway API key for model routing (if using custom gateway)
AI_GATEWAY_API_KEY=your_ai_gateway_key
# üí° AI Gateway Base URL (optional, if using custom gateway endpoint)
AI_GATEWAY_BASE_URL=https://api.your-gateway.com

# ===================================
# üõ†Ô∏è AI TOOLS & SERVICES
# ===================================

# ‚ö†Ô∏è E2B API key for code execution sandboxes
# Get your key: https://e2b.dev/docs/getting-started/api-key
E2B_API_KEY=your_e2b_api_key_here

# ‚ö†Ô∏è E2B Sandbox template ID for code interpreter
# Create template: https://e2b.dev/docs/sandboxes/templates
SANDBOX_TEMPLATE_ID=your_sandbox_template_id

# ‚ö†Ô∏è Tavily API key for web search functionality
# Get your key: https://tavily.com/
TAVILY_API_KEY=your_tavily_api_key_here

# ‚ö†Ô∏è Exa AI API key for advanced web search and research
# Get your key: https://exa.ai/
EXA_API_KEY=your_exa_api_key_here

# ‚ö†Ô∏è Firecrawl API key for web scraping and content extraction
# Get your key: https://docs.firecrawl.dev/
FIRECRAWL_API_KEY=your_firecrawl_api_key_here

# ===================================
# üì¶ STORAGE SERVICES
# ===================================

# ‚ö†Ô∏è Vercel Blob storage token for file uploads
# Auto-configured on Vercel: https://vercel.com/docs/storage/vercel-blob
BLOB_READ_WRITE_TOKEN=your_blob_token_here

# üí° Redis URL for caching and real-time features
# Upstash Redis: https://upstash.com/
# Local Redis: redis://localhost:6379
REDIS_URL=redis://your_redis_url_here

# ===================================
# üìä MONITORING & ANALYTICS
# ===================================

# üí° Langfuse observability and tracing (optional but recommended)
# Get your keys: https://langfuse.com/
LANGFUSE_SECRET_KEY=sk-lf-your_secret_key_here
LANGFUSE_PUBLIC_KEY=pk-lf-your_public_key_here
# EU region (default): https://cloud.langfuse.com
# US region: https://us.cloud.langfuse.com
LANGFUSE_BASEURL=https://cloud.langfuse.com

# Note: Vercel Analytics is auto-configured when deployed on Vercel

# ===================================
# üë• GUEST ACCESS CONFIGURATION
# ===================================

# Models available to anonymous users
# 'all' = all chat-capable models, or comma-separated list of model IDs
ANONYMOUS_MODELS=all

# Guest user credit limit (high default removes tool budget limits)
ANONYMOUS_CREDITS=10000

# Rate limiting for guest users (requests per minute)
ANONYMOUS_RPM=10000

# Rate limiting for guest users (requests per month)
ANONYMOUS_RPMONTH=10000

# ===================================
# üîß DEVELOPMENT & DEPLOYMENT
# ===================================

# üí° Environment mode (automatically set by framework)
# NODE_ENV=development | production | test

# üí° Development server port (defaults to 3000)
# PORT=3000

# üí° AI model context window size (defaults to 128,000 tokens)
# CONTEXT_SIZE=128000

# üí° Logging level for development
# LOG_LEVEL=debug | info | warn | error

# üí° Skip web server in tests (for Playwright)
# SKIP_WEBSERVER=true

# ===================================
# üöÄ VERCEL DEPLOYMENT (Auto-configured)
# ===================================
# The following are automatically set by Vercel:
# - VERCEL_URL
# - VERCEL_PROJECT_PRODUCTION_URL
# - CI (for continuous integration)

# ===================================
# üìù HELPFUL LINKS
# ===================================
# - Sparka AI Documentation: [Add your docs URL]
# - Environment Setup Guide: [Add your setup guide]
# - Deployment Guide: [Add your deployment guide]
# - Troubleshooting: [Add your troubleshooting guide]
